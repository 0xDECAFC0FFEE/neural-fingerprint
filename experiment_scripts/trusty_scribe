#!/bin/bash
# Trying to make it easier to keep track of experiments.
# Example use:
# $ ./trusty_scribe -d /tmp -n testing_the_scribe python -u example_experiment.py

usage="usage: trusty_scribe [-h] [-d <output-directory>] [-n <expt-name>] <command>"

set -o noclobber # Make sure we don't overwrite anything, just to be safe.

output_root_dir=/tmp # Default output directory
expt_name=just_experimenting # Default experiment name
while getopts hd:n: opt; do # Parse options
    case "$opt" in
        h) echo $usage;;
        d) export output_root_dir=$OPTARG;;
        n) expt_name=$OPTARG;;
    esac
done
shift $((OPTIND-1)) # Remove flags from command line args
command=$@

if [ ! -d $output_root_dir ]; then
    echo "Directory \"$output_root_dir\" doesn't exist. Aborting"
    exit 1
fi

# Make a unique directory name by appending indices until we find one that doesn't exist.
date=$(date +%Y-%m-%d)
dir_name_stem=$output_root_dir/$date-$expt_name-
idx=0
while [ -e $dir_name_stem$idx ]; do
    let idx=idx+1 
done
dir_name=$dir_name_stem$idx
mkdir -p $dir_name
export OUTPUT_DIR=$dir_name # Use this environment variable to save figs etc.

echo "Starting experiment. Output will be saved in" $dir_name
echo
{
echo "### $expt_name, iteration $idx"
start_time=$(date +%s)
echo $(date)
echo

if git status > /dev/null 2> /dev/null ; then
    repo_name=$(basename $(git rev-parse --show-toplevel))
    commit_hash=$(git rev-parse HEAD)
    echo "Last commit to $repo_name was:"
    echo $commit_hash
    echo
    echo \`\`\` # Github Markdown syntax for code block
    echo "\$ git add -all  # This ensures that untracked files also show up"
    git add --all
    echo "\$ git diff HEAD -U0"
    git diff HEAD -U0 # 0 context lines to reduce clutter
    echo \`\`\`
else
    echo "$(basename $(pwd)) is not a git repository."
fi
echo
echo \`\`\`
echo \$ $command
$command # Running the actual command 
echo \`\`\`
echo
end_time=$(date +%s)
let duration=end_time-start_time
echo "Finished on $(date). Total duration was $duration seconds."
} 2>&1 | tee $dir_name/experiment_summary.md # pipe all output to both stdout and a log file
# Note: Run Python scripts with -u flag for unbuffered real-time output
